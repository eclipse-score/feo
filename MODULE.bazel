# *******************************************************************************
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0
#
# SPDX-License-Identifier: Apache-2.0
# *******************************************************************************
module(
    name = "feo",
    version = "0.1",
)

bazel_dep(name = "rules_python", version = "1.4.1")

PYTHON_VERSION = "3.12"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    is_default = True,
    python_version = PYTHON_VERSION,
)
use_repo(python)

# Add GoogleTest dependency
bazel_dep(name = "googletest", version = "1.14.0")

# Rust rules for Bazel
bazel_dep(name = "rules_rust", version = "0.56.0")

# Checker rule for CopyRight checks/fixs
bazel_dep(name = "score_cr_checker", version = "0.3.1")
bazel_dep(name = "score_python_basics", version = "0.3.4")
bazel_dep(name = "score_starpls_lsp", version = "0.1.0")

# C/C++ rules for Bazel
bazel_dep(name = "rules_cc", version = "0.1.1")

# LLVM Toolchains Rules - host configuration
bazel_dep(name = "toolchains_llvm", version = "1.2.0")

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    cxx_standard = {"": "c++17"},
    llvm_version = "19.1.0",
)
use_repo(llvm, "llvm_toolchain")
use_repo(llvm, "llvm_toolchain_llvm")

register_toolchains("@llvm_toolchain//:all")

# Dash license checker
bazel_dep(name = "score_dash_license_checker", version = "0.1.2")

# Format checker
bazel_dep(name = "score_format_checker", version = "0.1.1")
bazel_dep(name = "aspect_rules_lint", version = "1.4.4")
bazel_dep(name = "buildifier_prebuilt", version = "8.2.0.2")

#docs-as-code
bazel_dep(name = "score_docs_as_code", version = "1.0.1")

#=======
#
#
#RUST_EDITION = "2021"
#
#RUST_VERSION = "1.81.0"
#
#rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
#rust.toolchain(
#    edition = RUST_EDITION,
#    sha256s = {
#        "rustc-1.81.0-x86_64-unknown-linux-gnu.tar.xz": "988a4e4cdecebe4f4a0c52ec4ade5a5bfc58d6958969f5b1e8aac033bda2613e",
#        "clippy-1.81.0-x86_64-unknown-linux-gnu.tar.xz": "c545ea0f2901eb1cd652721350147df11744afbb97eb117d89b1f313e9920ffb",
#        "cargo-1.81.0-x86_64-unknown-linux-gnu.tar.xz": "c50ee4b1ae8695461930e36d5465dddb7c7a0e0f0aa6cbd60de120b17c38b841",
#        "llvm-tools-1.81.0-x86_64-unknown-linux-gnu.tar.xz": "d15a4a0bd4202d2252d826c7bdaee19fdba3c766725f2ccab67a4981c7d5a62f",
#        "rust-std-1.81.0-x86_64-unknown-linux-gnu.tar.xz": "6ddf80f254e8eea9956308ba89fd68e1ac7885853df9239b07bbc9f047b7562f",
#    },
#    versions = [RUST_VERSION],
#)
#use_repo(rust, "rust_toolchains")
#
#crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")
#crate.from_cargo(
#    name = "crates",
#    cargo_lockfile = "//:Cargo.lock",
#    manifests = ["//:Cargo.toml"],
#)
#use_repo(crate, "crates")
#
## To update, run `bazel run @rules_rust//tools/rust_analyzer:gen_rust_project`.
#rust_analyzer = use_extension("@rules_rust//tools/rust_analyzer:deps.bzl", "rust")
#rust_analyzer.rust_analyzer_dependencies()
#
#>>>>>>> fb5d28c (Initial commit)
