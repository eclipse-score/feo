# *******************************************************************************
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0
#
# SPDX-License-Identifier: Apache-2.0
# *******************************************************************************
module(
    name = "feo",
    version = "0.1",
)

bazel_dep(name = "rules_python", version = "1.4.1")

PYTHON_VERSION = "3.12"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    is_default = True,
    python_version = PYTHON_VERSION,
)
use_repo(python)

# Add GoogleTest dependency
bazel_dep(name = "googletest", version = "1.17.0")

# Rust rules for Bazel
bazel_dep(name = "rules_rust", version = "0.63.0")

# C/C++ rules for Bazel
bazel_dep(name = "rules_cc", version = "0.2.1")

# LLVM Toolchains Rules - host configuration
bazel_dep(name = "toolchains_llvm", version = "1.4.0")

llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    cxx_standard = {"": "c++17"},
    llvm_version = "19.1.0",
)
use_repo(llvm, "llvm_toolchain")
use_repo(llvm, "llvm_toolchain_llvm")

register_toolchains("@llvm_toolchain//:all")

# tooling
bazel_dep(name = "score_tooling", version = "1.0.1")
bazel_dep(name = "aspect_rules_lint", version = "1.5.3")
bazel_dep(name = "buildifier_prebuilt", version = "8.2.0.2")

#docs-as-code
bazel_dep(name = "score_docs_as_code", version = "1.1.0")

# Rust Toolchain
RUST_EDITION = "2021"

RUST_VERSION = "1.83.0"

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = RUST_EDITION,
    sha256s = {
        "rustc-1.83.0-x86_64-unknown-linux-gnu.tar.xz": "6ec40e0405c8cbed3b786a97d374c144b012fc831b7c22b535f8ecb524f495ad",
        "clippy-1.83.0-x86_64-unknown-linux-gnu.tar.xz": "ef6c05abcfd861ff0bca41d408e126dda195dc966ee35abee57645a12d418f5b",
        "cargo-1.83.0-x86_64-unknown-linux-gnu.tar.xz": "de834a4062d9cd200f8e0cdca894c0b98afe26f1396d80765df828880a39b98c",
        "llvm-tools-1.83.0-x86_64-unknown-linux-gnu.tar.xz": "b931673b309c229e234f03271aaa777ea149c3c41f0fb43f3ef13a272540299a",
        "rust-std-1.83.0-x86_64-unknown-linux-gnu.tar.xz": "c88fe6cb22f9d2721f26430b6bdd291e562da759e8629e2b4c7eb2c7cad705f2",
    },
    versions = [RUST_VERSION],
)
use_repo(rust, "rust_toolchains")

crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")
crate.from_cargo(
    name = "cargo",
    cargo_lockfile = "//:Cargo.lock",
    manifests = [
        "//:Cargo.toml",
        "//examples/rust/cycle-benchmark:Cargo.toml",
        "//examples/rust/mini-adas:Cargo.toml",
        "//feo:Cargo.toml",
        "//feo-com:Cargo.toml",
        "//feo-cpp-build:Cargo.toml",
        "//feo-cpp-macros:Cargo.toml",
        "//feo-log:Cargo.toml",
        "//feo-logger:Cargo.toml",
        "//feo-time:Cargo.toml",
        "//feo-tracer:Cargo.toml",
        "//feo-tracing:Cargo.toml",
        "//logd:Cargo.toml",
        "//perfetto-model:Cargo.toml",
    ],
)
use_repo(crate, "cargo")

# To update, run `bazel run @rules_rust//tools/rust_analyzer:gen_rust_project`.
rust_analyzer = use_extension("@rules_rust//tools/rust_analyzer:deps.bzl", "rust")
rust_analyzer.rust_analyzer_dependencies()
